version: 2.1

orbs:
  docker: circleci/docker@4.3.1
  kubernetes: circleci/kubernetes@0.4.0
  aws-eks: circleci/aws-eks@1.21

# executors:
#   python:
#     docker:
#       - image: circleci/python:3.7.3-stretch
#   aws:
#     docker:
#     - image: amazon/aws-cli

jobs:
  run-lint:
    docker:
      - image: circleci/python:3.7.3-stretch
  # working_directory: ~/repo
    steps:
      - checkout
  # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
      # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
              python3 -m venv venv
              . venv/bin/activate
              make install
              wget -O ./hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
              chmod +x ./hadolint
      - save_cache:
          paths:
            - ./.capstone
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
              . venv/bin/activate
              make lint 

    build-docker-image:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - run:
          name: Build Docker Image
          command: |
            docker build -t capstone .
            docker image ls

    push-docker-image:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - run:
          name: Push Docker Image
          command: |
            dockerpath=oketcbb/capstone
            docker login --username=oketcbb --email=bethoketch@gmail.co.uk
            docker tag capstone $dockerpath
            echo "Docker ID and Image: $dockerpath"
            docker push $dockerpath

    # deploy-kubernetes:
    #   executor: aws-eks/python3
    #   steps:
    #     - checkout
    #     - run:
    #       name: create cluster
    #     - run:
    #       name: deploy kubernetes cluster
    #       command: |
    #         aws eks --region us-east-1 update-kubeconfig --name capstone
    #     # kubectl config use-context arn:aws:eks:us-east-1:731488622603:cluster/capstone
    #         kubectl get nodes
    #         kubectl get pods --all-namespaces
    #         kubectl apply -f eks_deployment.yml
    #         kubectl get deployment



workflows:
  deployment:
    jobs:
      - run-lint
      - build-docker-image
      - upload-image:
          requires: [build]
      # - deploy-kubernetes:
      #     requires:
      #       - [upload-image]